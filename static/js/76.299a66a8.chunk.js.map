{"version":3,"file":"static/js/76.299a66a8.chunk.js","mappings":"yNACA,GAAiB,E,SC4CjB,EAtCa,WACX,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAyBE,EAAAA,EAAAA,YAAzB,eAAOC,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAQR,OAPAC,EAAAA,EAAAA,IAAcN,GACXO,MAAK,SAAAC,GACJJ,EAAQI,EACT,IACAC,OAAM,SAAAC,GACLC,QAAQC,OACT,IACI,WAAQ,CAChB,GAAE,CAACZ,KAKF,8BACGG,IACC,eAAIU,UAAWC,EAAAA,KAAf,SACGX,EAAMY,KAAKC,KAAI,SAACC,GACf,IAAMC,EAAc,yCAAqCD,EAAGE,cAC5D,OAAMF,EAAGE,cAEL,gBAAIN,UAAWC,EAAAA,KAAf,WACE,gBAAKM,MAAM,QAAQC,IAAKH,EAAgBI,IAAKL,EAAGM,QAChD,yBAAG,SAAON,EAAGM,SACb,yBAAG,cAAYN,EAAGO,eAHQP,EAAGQ,KAMrB,yBAAe,IAAER,EAAGM,KAAK,oBAAjBN,EAAGQ,GAC1B,OAKV,C,sBC5CD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOvB,GAEP,YADAiB,EAAOjB,EAET,CAEIsB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAO5B,KAAKuB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C,uJClCMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,cAAO,oGACkBC,MAAM,yDAAD,OAC+BF,IAFtD,YACCG,EADD,QAIWC,GAJX,gCAKKD,EAASE,OALd,+CAMDf,QAAQR,OAAO,IAAIwB,MAAM,cANxB,0GASA,SAAeC,EAAtB,+CAAO,OAAP,cAAO,WAAiCC,GAAjC,uFACkBN,MAAM,qDAAD,OAC2BF,EAD3B,4DACsFQ,IAF7G,WACCL,EADD,QAKSC,GALT,sBAKmB,IAAIE,MAAM,aAL7B,uBAOQH,EAASE,OAPjB,0GAUA,SAAeI,EAAtB,kC,aAAO,O,cAAA,WAAsC/B,GAAtC,uFACkBwB,MAAM,uCAAD,OACaxB,EADb,oBAC2BsB,EAD3B,+CADvB,YACCG,EADD,QAKWC,GALX,gCAMKD,EAASE,OANd,+CAODf,QAAQR,OAAO,IAAIwB,MAAM,cAPxB,0GAYA,SAAe/C,EAAtB,kC,aAAO,O,cAAA,WAA6BmB,GAA7B,uFACkBwB,MAAM,sCAAD,OACYxB,EADZ,4BACkCsB,IAFzD,WACCG,EADD,QAKSC,GALT,sBAKmB,IAAIE,MAAM,aAL7B,uBAMQH,EAASE,OANjB,0GAUA,SAAeK,EAAtB,+CAAO,OAAP,cAAO,WAA+BhC,GAA/B,uFACkBwB,MAAM,sCAAD,OACYxB,EADZ,4BACkCsB,IAFzD,WACCG,EADD,QAKSC,GALT,sBAKmB,IAAIE,MAAM,aAL7B,uBAMQH,EAASE,OANjB,0G","sources":["components/Cast/Cast.module.css","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","servises/serviceAPI.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMoviesCast } from 'servises/serviceAPI';\nimport s from './Cast.module.css';\n\nconst Cast = () => {\n  const { MoviesID } = useParams();\n  const [movie, setCast] = useState();\n\n  useEffect(() => {\n    getMoviesCast(MoviesID)\n      .then(data => {\n        setCast(data);\n      })\n      .catch(e => {\n        console.error();\n      });\n    return () => {};\n  }, [MoviesID]);\n\n    \n    \n  return (\n    <>\n      {movie && (\n        <ul className={s.list}>\n          {movie.cast.map((el) => {\n            const ImageAvailable = `https://image.tmdb.org/t/p/w500${el.profile_path}`;\n            if (!!el.profile_path) {\n              return (\n                <li className={s.item} key={el.id}>\n                  <img width=\"200px\" src={ImageAvailable} alt={el.name} />\n                  <p>Name: {el.name}</p>\n                  <p>Character: {el.character}</p>\n                </li>\n              );\n            } else return <p key={el.id}> {el.name}:No image found</p>;\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Cast;\n\nCast.propTypes = {\n   MoviesID: PropTypes.string,\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '0eb6fe6e84ef57a3582e47f666d7118a';\n\nexport async function apiService() {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport async function getMoviesBySearch(query) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  if (!response.ok) throw new Error('Not found');\n\n  return await response.json();\n}\n\nexport async function getMoviesByDetailsByID(id) {\n  const response = await fetch(\n    ` https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\nexport async function getMoviesCast(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  if (!response.ok) throw new Error('Not found');\n  return await response.json();\n}\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport async function getMoviesReview(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  if (!response.ok) throw new Error('Not found');\n  return await response.json();\n}\n"],"names":["MoviesID","useParams","useState","movie","setCast","useEffect","getMoviesCast","then","data","catch","e","console","error","className","s","cast","map","el","ImageAvailable","profile_path","width","src","alt","name","character","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","apiService","fetch","response","ok","json","Error","getMoviesBySearch","query","getMoviesByDetailsByID","getMoviesReview"],"sourceRoot":""}