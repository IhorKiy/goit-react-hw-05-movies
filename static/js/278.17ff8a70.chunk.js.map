{"version":3,"file":"static/js/278.17ff8a70.chunk.js","mappings":"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","sources":["pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","servises/serviceAPI.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesBySearch } from 'servises/serviceAPI';\n\nconst Movies = () => {\n  const [movies, setMovie] = useState([]);\n  const [queryInpt, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n\n\n  useEffect(() => {\n    getMoviesBySearch(queryInpt)\n      .then(data => {\n        setMovie(data.results);\n      })\n      .catch(e => {\n        console.error(e);\n      });\n    // return () => {};\n  },[queryInpt]);\n\n  const updateSetQuery = () => {\n    setQuery(query);\n  };\n\n  \n\n  \n\n  const updateQuerryString = evt => {\n    if (evt.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: evt.target.value });\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={query} onChange={updateQuerryString} />\n      <button type=\"button\" onClick={() => updateSetQuery()}>\n        Search\n      </button>\n      {movies &&\n        movies.map(movie => {\n          return (\n            <>\n              <ul>\n                <li>\n                  <Link\n                    key={movie.id}\n                    to={`/movies/${movie.id}`}\n                    state={{ from: location }}\n                  >\n                    {movie.title || movie.name}\n                  </Link>\n                </li>\n              </ul>\n            </>\n          );\n        })}\n    </div>\n  );\n};\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '0eb6fe6e84ef57a3582e47f666d7118a';\n\nexport async function apiService() {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport async function getMoviesBySearch(query) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  if (!response.ok) throw new Error('Not found');\n\n  return await response.json();\n}\n\nexport async function getMoviesByDetailsByID(id) {\n  const response = await fetch(\n    ` https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\nexport async function getMoviesCast(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  if (!response.ok) throw new Error('Not found');\n  return await response.json();\n}\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport async function getMoviesReview(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  if (!response.ok) throw new Error('Not found');\n  return await response.json();\n}\n"],"names":["useState","movies","setMovie","queryInpt","setQuery","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","getMoviesBySearch","then","data","results","catch","e","console","error","type","value","onChange","evt","target","onClick","map","movie","to","id","state","from","title","name","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","apiService","fetch","response","ok","json","Error","getMoviesByDetailsByID","getMoviesCast","getMoviesReview"],"sourceRoot":""}