{"version":3,"file":"static/js/186.0d77196e.chunk.js","mappings":"8LAyCA,UApCgB,WACX,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACT,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaF,OAVAC,EAAAA,EAAAA,YAAU,WAQR,OAPAC,EAAAA,EAAAA,IAAgBN,GACbO,MAAK,SAACC,GACLJ,EAASI,EACV,IACAC,OAAM,SAACC,GACNC,QAAQC,OACT,IACI,WAAQ,CAChB,GAAE,CAACZ,KAEF,8BACGG,EAAMU,SAAWV,EAAMU,QAAQC,QAC9B,wBACGX,EAAMU,QAAQE,KAAI,SAACC,GAClB,OACE,2BACE,yBAAG,WAASA,EAAGC,WACf,uBAAID,EAAGE,YAFAF,EAAGG,GAKf,OAGH,uBAAG,8CAKV,C,sBCvCD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOjB,GAEP,YADAW,EAAOX,EAET,CAEIgB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOtB,KAAKiB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C,uJClCMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,cAAO,oGACkBC,MAAM,yDAAD,OAC+BF,IAFtD,YACCG,EADD,QAIWC,GAJX,gCAKKD,EAASE,OALd,+CAMDf,QAAQR,OAAO,IAAIwB,MAAM,cANxB,0GASA,SAAeC,EAAtB,+CAAO,OAAP,cAAO,WAAiCC,GAAjC,uFACkBN,MAAM,qDAAD,OAC2BF,EAD3B,4DACsFQ,IAF7G,WACCL,EADD,QAKSC,GALT,sBAKmB,IAAIE,MAAM,aAL7B,uBAOQH,EAASE,OAPjB,0GAUA,SAAeI,EAAtB,kC,aAAO,O,cAAA,WAAsC/B,GAAtC,uFACkBwB,MAAM,uCAAD,OACaxB,EADb,oBAC2BsB,EAD3B,+CADvB,YACCG,EADD,QAKWC,GALX,gCAMKD,EAASE,OANd,+CAODf,QAAQR,OAAO,IAAIwB,MAAM,cAPxB,0GAYA,SAAeI,EAAtB,kC,aAAO,O,cAAA,WAA6BhC,GAA7B,uFACkBwB,MAAM,sCAAD,OACYxB,EADZ,4BACkCsB,IAFzD,WACCG,EADD,QAKSC,GALT,sBAKmB,IAAIE,MAAM,aAL7B,uBAMQH,EAASE,OANjB,0GAUA,SAAexC,EAAtB,+CAAO,OAAP,cAAO,WAA+Ba,GAA/B,uFACkBwB,MAAM,sCAAD,OACYxB,EADZ,4BACkCsB,IAFzD,WACCG,EADD,QAKSC,GALT,sBAKmB,IAAIE,MAAM,aAL7B,uBAMQH,EAASE,OANjB,0G","sources":["components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","servises/serviceAPI.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReview } from 'servises/serviceAPI';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n     const { MoviesID } = useParams();\n    const [movie, setMovie] = useState([]);\n    \n\n  useEffect(() => {\n    getMoviesReview(MoviesID )\n      .then((data) => {\n        setMovie(data);\n      })\n      .catch((e) => {\n        console.error();\n      });\n    return () => {};\n  }, [MoviesID ]);\n  return (\n    <>\n      {movie.results && movie.results.length ? (\n        <ul>\n          {movie.results.map((el) => {\n            return (\n              <li key={el.id}>\n                <b>Author: {el.author}</b>\n                <p>{el.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviwes for this movie</p>\n      )}\n    </>\n  );\n\n}\n\nexport default Reviews\n\nReviews.propTypes = {\n   MoviesID: PropTypes.string,\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '0eb6fe6e84ef57a3582e47f666d7118a';\n\nexport async function apiService() {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport async function getMoviesBySearch(query) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  if (!response.ok) throw new Error('Not found');\n\n  return await response.json();\n}\n\nexport async function getMoviesByDetailsByID(id) {\n  const response = await fetch(\n    ` https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\nexport async function getMoviesCast(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  if (!response.ok) throw new Error('Not found');\n  return await response.json();\n}\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport async function getMoviesReview(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  if (!response.ok) throw new Error('Not found');\n  return await response.json();\n}\n"],"names":["MoviesID","useParams","useState","movie","setMovie","useEffect","getMoviesReview","then","data","catch","e","console","error","results","length","map","el","author","content","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","apiService","fetch","response","ok","json","Error","getMoviesBySearch","query","getMoviesByDetailsByID","getMoviesCast"],"sourceRoot":""}